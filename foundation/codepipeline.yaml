AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ServiceName:
    Type: String
    Default: github-management
    Description: Name for the service, used in the code repository, Lambda function, and pipeline names
  GithubOwner:
    Type: String
    Default: davidobrien1985
    Description: Github User Name / Org name that own the repo
  GithubPAT:
    NoEcho: true
    Type: String
    Description: Personal Access Token for Github access
  GithubRepoName:
    Type: String
    Default: manage-github
    Description: Repo name on Github
  GithubRepoBranch:
    Type: String
    Default: master
    Description: Github repo branch
  TagVendor:
    Type: String
    Description: Name of Vendor deploying this template.
  TagService:
    Description: adobe/bootstrap/core/devops
    Type: String
    Default: core
  TagEnvironment:
    Description: dev/test/prod
    Type: String
    Default: dev
  TagApplication:
    Description: stash/bamboo/nexus/aem/ad/nat/openvpn/firewall/v_orch
    Type: String
    Default: github
  TagOwner:
    Description: email address of the owner
    Type: String
    Default: 'me@david-obrien.net'
  TagAccountName:
    Description: Which account is this stack deployed to?
    Type: String
    Default: ''
Description: Stack for CodePipeline and CodeBuild to deploy a Lambda and Step Function stack to configure github repos
Resources:
    # CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)s
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Ref: TagService
                - Ref: TagApplication
                - Ref: TagEnvironment
                - Ref: TagOwner
        - Key: Owner
          Value:
            Ref: TagOwner
        - Key: Service
          Value:
            Ref: TagService
        - Key: Environment
          Value:
            Ref: TagEnvironment
        - Key: Application
          Value:
            Ref: TagApplication
  LambdaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 
        Fn::Join: 
          - '-'
          - - Ref: ServiceName
            - Ref: TagAccountName
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Ref: TagService
                - Ref: TagApplication
                - Ref: TagEnvironment
                - Ref: TagOwner
        - Key: Owner
          Value:
            Ref: TagOwner
        - Key: Service
          Value:
            Ref: TagService
        - Key: Environment
          Value:
            Ref: TagEnvironment
        - Key: Application
          Value:
            Ref: TagApplication
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
                - 'sts:AssumeRole'
              Effect: Allow
              Principal:
                Service:
                  - codebuild.amazonaws.com
      Path: /
      Policies:
          - PolicyName: CodeBuildAccess
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Resource:
                    -
                      Fn::Sub: 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}_build'
                    -
                      Fn::Sub: 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}_build:*'
                  Action:
                    - 'logs:CreateLogGroup'
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                - Effect: Allow
                  Resource:
                    -
                      Fn::Sub: 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                  Action:
                    - 's3:GetObject'
                    - 's3:GetObjectVersion'
                    - 's3:PutObject'
                - Effect: Allow
                  Resource:
                    - arn:aws:s3:::*
                  Action:
                    - 's3:GetObject'
                    - 's3:GetObjectVersion'
                    - 's3:PutObject'
                - Effect: Allow
                  Resource:
                    Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/CodeBuild*
                  Action:
                    - ssm:GetParameters
                - Effect: Allow
                  Resource: '*'
                  Action:
                    - 'cloudformation:ListExports'
                    - 'acm:ListCertificates'
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: '${ServiceName}_build'
      Description: Build project for the Lambda service
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/dot-net:core-1
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value:
              Ref: BuildArtifactsBucket
          - Name: LAMBDA_OUTPUT_BUCKET
            Value:
              Ref: LambdaBucket
          - Name: ACCOUNT_NAME
            Value:
              Ref: TagAccountName
      ServiceRole:
        Fn::GetAtt: CodeBuildServiceRole.Arn
      Source:
          Type: CODEPIPELINE
          BuildSpec: foundation/buildspec.yaml
      Tags:
        - Key: Name
          Value:
            'Fn::Join':
              - '-'
              - - Ref: TagService
                - Ref: TagApplication
                - Ref: TagEnvironment
                - Ref: TagOwner
        - Key: Owner
          Value:
            Ref: TagOwner
        - Key: Service
          Value:
            Ref: TagService
        - Key: Environment
          Value:
            Ref: TagEnvironment
        - Key: Application
          Value:
            Ref: TagApplication
  # CodePipeline definition and required roles
  CFNPipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: CloudFormation Pipeline Execution Policy
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Action:
              - 'cloudformation:CreateStack'
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:DeleteStack'
              - 'cloudformation:UpdateStack'
              - 'cloudformation:CreateChangeSet'
              - 'cloudformation:ExecuteChangeSet'
              - 'cloudformation:DeleteChangeSet'
              - 'cloudformation:DescribeChangeSet'
              - 'cloudformation:SetStackPolicy'
              - 'cloudformation:SetStackPolicy'
              - 'cloudformation:ValidateTemplate'
              - 'codebuild:StartBuild'
              - 'codebuild:BatchGetBuilds'
          Resource: "*"
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
            - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        -
          Ref: CFNPipelinePolicy
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'iam:PassRole'
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                  - 'lambda:InvokeAsyc'
                Effect: Allow
                Resource: '*'
  Pipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
          ArtifactStore:
            Location:
              Ref: BuildArtifactsBucket
            Type: S3
          Name:
            Fn::Sub: ${ServiceName}_pipeline
          RoleArn:
            Fn::GetAtt: PipelineExecutionRole.Arn
          Stages:
            - Name: Source
              Actions:
                - Name: GithubRepo
                  ActionTypeId:
                    Category: Source
                    Owner: ThirdParty
                    Provider: GitHub
                    Version: 1
                  Configuration:
                    Repo:
                      Ref: GithubRepoName
                    Branch:
                      Ref: GithubRepoBranch
                    Owner:
                      Ref: GithubOwner
                    OAuthToken:
                      Ref: GithubPAT
                  OutputArtifacts:
                    - Name: SourceZip
                  RunOrder: 1
            - Name: Build
              Actions:
                - Name: CodeBuild
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: 1
                  Configuration:
                    ProjectName:
                      Ref: CodeBuildProject
                  InputArtifacts:
                    - Name: SourceZip
                  OutputArtifacts:
                    - Name: BuiltZip
            - Name: Deploy
              Actions:
                - Name: CreateChangeSet
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: 1
                  Configuration:
                    ActionMode: CHANGE_SET_REPLACE
                    RoleArn:
                      Fn::GetAtt: CloudFormationExecutionRole.Arn
                    StackName:
                      Fn::Sub: '${ServiceName}-Stack-Tests'
                    ChangeSetName:
                      Fn::Sub: '${ServiceName}-ChangeSet-Tests'
                    TemplatePath: BuiltZip::NewSamTemplate.yaml
                    Capabilities: CAPABILITY_IAM
                    ParameterOverrides:
                      Fn::Sub: |
                        {
                          "PathToArtifact": { "Fn::GetParam" : ["BuiltZip", "parameters.json", "PathToArtifact"]},
                          "AccountName": { "Fn::GetParam" : ["BuiltZip", "parameters.json", "AccountName"]},
                          "LambdaArtifactsBucket": { "Fn::GetParam" : ["BuiltZip", "parameters.json", "LambdaArtifactsBucket"]} 
                        }
                  InputArtifacts:
                    - Name: BuiltZip
                  OutputArtifacts:
                    - Name: TestChangeSet
                  RunOrder: 1
                - Name: ExecuteChangeSet
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: 1
                  Configuration:
                    ActionMode: CHANGE_SET_EXECUTE
                    RoleArn:
                      Fn::GetAtt: CloudFormationExecutionRole.Arn
                    StackName:
                      Fn::Sub: '${ServiceName}-Stack-Tests'
                    ChangeSetName:
                      Fn::Sub: '${ServiceName}-ChangeSet-Tests'
                  OutputArtifacts:
                    - Name: ExecutedTestChangeSet
                  RunOrder: 2